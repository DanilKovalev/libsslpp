---
Checks: 'clang-diagnostic-*,
         clang-analyzer-*,
         modernize-use-override,
         readability-identifier-naming,
         -cert-err60-cpp'

WarningsAsErrors: ''
HeaderFilterRegex: ''
AnalyzeTemporaryDtors: false
FormatStyle:     none
User:            alexander.petrov + danil.kovalev
CheckOptions:
  - key:             cert-dcl16-c.NewSuffixes
    value:           'L;LL;LU;LLU'
  - key:             cert-oop54-cpp.WarnOnlyIfThisHasSuspiciousField
    value:           '0'
  - key:             cppcoreguidelines-explicit-virtual-functions.IgnoreDestructors
    value:           '1'
  - key:             cppcoreguidelines-non-private-member-variables-in-classes.IgnoreClassesWithAllMemberVariablesBeingPublic
    value:           '1'
  - key:             google-readability-braces-around-statements.ShortStatementLines
    value:           '1'
  - key:             google-readability-function-size.StatementThreshold
    value:           '800'
  - key:             google-readability-namespace-comments.ShortNamespaceLines
    value:           '10'
  - key:             google-readability-namespace-comments.SpacesBeforeComments
    value:           '2'
  - key:             modernize-loop-convert.MaxCopySize
    value:           '16'
  - key:             modernize-loop-convert.MinConfidence
    value:           reasonable
  - key:             modernize-loop-convert.NamingStyle
    value:           CamelCase
  - key:             modernize-pass-by-value.IncludeStyle
    value:           llvm
  - key:             modernize-replace-auto-ptr.IncludeStyle
    value:           llvm
  - key:             modernize-use-nullptr.NullMacros
    value:           'NULL'
# Code style
  - key:   readability-identifier-naming.ClassCase
    value: 'CamelCase'
  - key: readability-identifier-naming.ClassPrefix
    value: 'C'
  - key: readability-identifier-naming.AbstractClassCase
    value: 'ClassPrefix'
  - key: readability-identifier-naming.AbstractClassPrefix
    value: 'I'
  - key: readability-identifier-naming.StructCase
    value: 'CamelCase'
  - key: readability-identifier-naming.StructPrefix
    value: 'S'
  #  Class member rules
  - key: readability-identifier-naming.PrivateMemberCase
    value: 'camelBack'
  - key: readability-identifier-naming.PrivateMemberPrefix
    value: 'm_'
  - key: readability-identifier-naming.PublicMemberCase
    value: 'camelBack'
# Commented because struct members take same rule
#  - key: readability-identifier-naming.PublicMemberPrefix
#    value: 'm_'
  - key: readability-identifier-naming.ClassMemberCase
    value: 'camelBack'
  - key: readability-identifier-naming.ClassMemberPrefix
    value: 's_'
  #  Class methods rules
  - key: readability-identifier-naming.ClassMethodCase
    value: 'CamelCase'
  - key: readability-identifier-naming.FunctionCase
    value: 'CamelCase'
  #  Variable rules
  - key: readability-identifier-naming.VariableCase
    value: 'camelBack'
  - key: readability-identifier-naming.LocalVariableCase
    value: 'camelBack'
  # For global variables
  - key: readability-identifier-naming.GlobalConstantCase
    value: 'CamelCase'
  - key: readability-identifier-naming.GlobalConstantPointerCase
    value: 'CamelCase'
#  - key: readability-identifier-naming.GlobalPointerCase
#      value: 'CamelCase'
#  - key: readability-identifier-naming.GlobalVariableCase
#    value: 'CamelCase'
...

